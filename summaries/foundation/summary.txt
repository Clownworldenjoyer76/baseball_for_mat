===== RUN TIMESTAMP: 2025-09-02 05:36:07 PM EDT =====

===== STATUS =====
✅ python succeeded [2025-09-02 05:36:02 PM EDT]
✅ python succeeded [2025-09-02 05:36:03 PM EDT]
✅ python succeeded [2025-09-02 05:36:03 PM EDT]
✅ python succeeded [2025-09-02 05:36:04 PM EDT]
✅ python succeeded [2025-09-02 05:36:05 PM EDT]
✅ python succeeded [2025-09-02 05:36:05 PM EDT]
❌ python failed [2025-09-02 05:36:05 PM EDT]
✅ python succeeded [2025-09-02 05:36:06 PM EDT]
✅ python succeeded [2025-09-02 05:36:06 PM EDT]
✅ python succeeded [2025-09-02 05:36:06 PM EDT]
✅ python succeeded [2025-09-02 05:36:07 PM EDT]
✅ python succeeded [2025-09-02 05:36:07 PM EDT]

===== LOG =====
▶️ START: normalize_names.py (2025-09-02 05:36:02 PM EDT)
✅ Batters normalized: 156 → data/normalized/batters_normalized.csv
✅ Pitchers normalized: 109 → data/normalized/pitchers_normalized.csv
⏹️ END: python (2025-09-02 05:36:02 PM EDT)

▶️ START: tag_master_files.py (2025-09-02 05:36:02 PM EDT)
⏹️ END: python (2025-09-02 05:36:03 PM EDT)

▶️ START: validate_tagged_players.py (2025-09-02 05:36:03 PM EDT)
⏹️ END: python (2025-09-02 05:36:03 PM EDT)

▶️ START: deduplicate_normalized.py (2025-09-02 05:36:03 PM EDT)
⏹️ END: python (2025-09-02 05:36:04 PM EDT)

▶️ START: normalize_lineups.py (2025-09-02 05:36:04 PM EDT)
✅ normalize_lineups.py completed: 839 rows written to data/raw/lineups_normalized.csv
⏹️ END: python (2025-09-02 05:36:05 PM EDT)

▶️ START: normalize_todays_games.py (2025-09-02 05:36:05 PM EDT)
✅ normalize_todays_games wrote 14 rows -> data/raw/todaysgames_normalized.csv
⏹️ END: python (2025-09-02 05:36:05 PM EDT)

▶️ START: inject_pitcher_ids_into_games.py (2025-09-02 05:36:05 PM EDT)
⏹️ END: python (2025-09-02 05:36:05 PM EDT)

▶️ START: fetch_mlb_ids.py (2025-09-02 05:36:05 PM EDT)
✅ fetch_mlb_ids: team_directory.csv schema validated.
⏹️ END: python (2025-09-02 05:36:06 PM EDT)

▶️ START: filter_stadium_metadata.py (2025-09-02 05:36:06 PM EDT)
⏹️ END: python (2025-09-02 05:36:06 PM EDT)

▶️ START: normalize_batter_team_names.py (2025-09-02 05:36:06 PM EDT)
⏹️ END: python (2025-09-02 05:36:06 PM EDT)

▶️ START: post_normalize_fixups.py (2025-09-02 05:36:06 PM EDT)
✅ post_normalize_fixups complete (no game_id injected)
⏹️ END: python (2025-09-02 05:36:07 PM EDT)

▶️ START: fix_inputs_inject_stolen_base_pct.py (2025-09-02 05:36:07 PM EDT)
⏹️ END: python (2025-09-02 05:36:07 PM EDT)


===== ERRORS =====
❌ python ERROR [2025-09-02 05:36:05 PM EDT]:
Traceback (most recent call last):
  File "/home/runner/work/baseball_for_mat/baseball_for_mat/scripts/inject_pitcher_ids_into_games.py", line 101, in <module>
    main()
  File "/home/runner/work/baseball_for_mat/baseball_for_mat/scripts/inject_pitcher_ids_into_games.py", line 85, in main
    games["pitcher_home_id"] = games.apply(lambda r: inject_id(r["pitcher_home"], r["pitcher_home_id"]), axis=1)
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/pandas/core/frame.py", line 10381, in apply
    return op.apply().__finalize__(self, method="apply")
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/pandas/core/apply.py", line 916, in apply
    return self.apply_standard()
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/pandas/core/apply.py", line 1063, in apply_standard
    results, res_index = self.apply_series_generator()
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/pandas/core/apply.py", line 1081, in apply_series_generator
    results[i] = self.func(v, *self.args, **self.kwargs)
  File "/home/runner/work/baseball_for_mat/baseball_for_mat/scripts/inject_pitcher_ids_into_games.py", line 85, in <lambda>
    games["pitcher_home_id"] = games.apply(lambda r: inject_id(r["pitcher_home"], r["pitcher_home_id"]), axis=1)
  File "/home/runner/work/baseball_for_mat/baseball_for_mat/scripts/inject_pitcher_ids_into_games.py", line 83, in inject_id
    return pd.to_numeric(pid, errors="coerce").astype("Int64")
TypeError: data type 'Int64' not understood

---

