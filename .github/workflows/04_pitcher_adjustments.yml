name: 04 Pitcher Adjustments

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["03 Batter Adjustments"]  # MUST match 03's name exactly
    types: [completed]
    branches: [main]

permissions:
  contents: write

jobs:
  pitcher_adjustments:
    # Runs when dispatched manually OR when 03 completed successfully
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Banner
        run: |
          echo "04 START $(TZ=America/New_York date)"
          echo "event_name=${{ github.event_name }}"
          echo "ref_name=${{ github.ref_name }}"
          echo "triggered_by=${{ github.event.workflow_run.name || 'manual' }}"
          echo "conclusion=${{ github.event.workflow_run.conclusion || 'manual' }}"

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-py-

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run stage with unified logs
        shell: bash
        run: |
          set +e
          mkdir -p summaries/pitchers_adjust
          STATUS="summaries/pitchers_adjust/status.txt"
          LOG="summaries/pitchers_adjust/log.txt"
          ERR="summaries/pitchers_adjust/errors.txt"
          SUM="summaries/pitchers_adjust/summary.txt"
          : >"$STATUS"; : >"$LOG"; : >"$ERR"; : >"$SUM"

          ts(){ TZ="America/New_York" date +"%Y-%m-%d %I:%M:%S %p %Z"; }
          run_step(){ echo "▶️ START: $1 ($(ts))" >>"$LOG"; shift; "$@" >>"$LOG" 2>step.err; rc=$?; if [ $rc -eq 0 ]; then echo "✅ $1 succeeded [$(ts)]" >>"$STATUS"; else echo "❌ $1 failed [$(ts)]" >>"$STATUS"; { echo "❌ $1 ERROR [$(ts)]:"; cat step.err; echo; echo '---'; echo; } >>"$ERR"; fi; rm -f step.err; echo "⏹️ END: $1 ($(ts))" >>"$LOG"; echo >>"$LOG"; }

          run_step normalize_pitcher_weather_outputs.py python scripts/normalize_pitcher_weather_outputs.py
          # run_step fix_away_team_column.py              python scripts/fix_away_team_column.py
          # run_step preprocess_pitcher_weather_park_away python scripts/preprocess_pitcher_weather_park_away.py
          # run_step add_team_alias_columns.py            python scripts/add_team_alias_columns.py
          # run_step add_team_columns_to_weather.py       python scripts/add_team_columns_to_weather.py
          run_step apply_pitcher_weather_adjustment.py  python scripts/apply_pitcher_weather_adjustment.py
          run_step apply_pitcher_park_adjustment.py     python scripts/apply_pitcher_park_adjustment.py
          # run_step normalize_pitcher_merge_inputs.py    python scripts/normalize_pitcher_merge_inputs.py
          run_step combine_pitcher_weather_park_home.py python scripts/combine_pitcher_weather_park_home.py
          run_step combine_pitcher_weather_park_away.py python scripts/combine_pitcher_weather_park_away.py

          {
            echo "===== RUN TIMESTAMP: $(ts) ====="
            echo
            echo "===== STATUS =====";  cat "$STATUS"
            echo; echo "===== LOG =====";     cat "$LOG"
            echo; echo "===== ERRORS =====";  cat "$ERR"
          } > "$SUM"

      - name: Commit stage outputs
        run: |
          git add data/adjusted/pitchers_*_{weather,park}.csv || true
          git add data/adjusted/pitchers_*_weather_park.csv || true
          git add summaries/pitchers_adjust/* || true
          git diff --cached --quiet || git commit -m "04 pitcher adjustments outputs"
          git pull --rebase origin main || true
          git push origin HEAD:main || true
