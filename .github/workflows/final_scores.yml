# A descriptive name for your workflow
name: Run Final Score Projection

# Controls when the action will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs automatically when you push to the 'main' branch
  push:
    branches:
      - main # Change to 'master' if that is your main branch

jobs:
  # A single job in this workflow called "run-script"
  run-script:
    # The type of virtual machine to run the job on
    runs-on: ubuntu-latest

    # A sequence of tasks that will be executed
    steps:
      # Step 1: Checks out your repository code so the job can access it
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Sets up the Python programming language
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Installs the necessary Python libraries (like pandas)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      # Step 4: Executes your Python script
      - name: Run the final score projection script
        run: python scripts/project_final_score.py

      # Step 5: Commits the new/updated files back to your repository
      - name: Commit and push changes
        run: |
          # Configure git with a user name and email
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          
          # Add the output files to be tracked by git
          git add data/_projections/final_scores_projected.csv
          git add data/_projections/debug_output.txt
          
          # Check if there are any changes to commit, and if so, commit and push them
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ðŸ“Š Update final score projections"
            git push
          fi
