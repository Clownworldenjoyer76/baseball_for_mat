name: 02 Weather Pipeline
true:
  workflow_dispatch: null
  workflow_run:
    workflows:
    - 01 Split & Schedule
    types:
    - completed
    branches:
    - main
permissions:
  contents: write
jobs:
  weather_pipeline:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
    - name: Configure Git
      run: 'git config user.name "github-actions"

        git config user.email "github-actions@github.com"

        '
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-py-
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install deps
      run: 'python -m pip install --upgrade pip

        pip install -r requirements.txt

        '
    - name: Run stage with unified logs
      shell: bash
      run: "set +e\nmkdir -p summaries/weather\nSTATUS=\"summaries/weather/status.txt\"\
        \nLOG=\"summaries/weather/log.txt\"\nERR=\"summaries/weather/errors.txt\"\n\
        SUM=\"summaries/weather/summary.txt\"\n: >\"$STATUS\"; : >\"$LOG\"; : >\"\
        $ERR\"; : >\"$SUM\"\n\nts(){ TZ=\"America/New_York\" date +\"%Y-%m-%d %I:%M:%S\
        \ %p %Z\"; }\nrun_step(){ echo \"\u25B6\uFE0F START: $1 ($(ts))\" >>\"$LOG\"\
        ; shift; \"$@\" >>\"$LOG\" 2>step.err; rc=$?; if [ $rc -eq 0 ]; then echo\
        \ \"\u2705 $1 succeeded [$(ts)]\" >>\"$STATUS\"; else echo \"\u274C $1 failed\
        \ [$(ts)]\" >>\"$STATUS\"; { echo \"\u274C $1 ERROR [$(ts)]:\"; cat step.err;\
        \ echo; echo '---'; echo; } >>\"$ERR\"; fi; rm -f step.err; echo \"\u23F9\uFE0F\
        \ END: $1 ($(ts))\" >>\"$LOG\"; echo >>\"$LOG\"; }\n\nrun_step generate_weather_csv.py\
        \  python scripts/generate_weather_csv.py\nrun_step get_weather_data.py  \
        \    python scripts/get_weather_data.py\nrun_step weather_data_fix.py    \
        \  python scripts/weather_data_fix.py\n\n{\n  echo \"===== RUN TIMESTAMP:\
        \ $(ts) =====\"\n  echo; echo \"===== STATUS =====\";  cat \"$STATUS\"\n \
        \ echo; echo \"===== LOG =====\";     cat \"$LOG\"\n  echo; echo \"===== ERRORS\
        \ =====\";  cat \"$ERR\"\n} > \"$SUM\"\n"
    - name: Finalize weather outputs
      run: python scripts/finalize_weather_outputs.py
    - name: Commit stage outputs
      run: 'git add data/weather_input.csv || true

        git add data/weather_adjustments.csv || true

        git add summaries/weather/* || true

        git diff --cached --quiet || git commit -m "02 weather pipeline outputs"

        git pull --rebase origin main || true

        git push origin HEAD:main || true

        '
'on':
  workflow_dispatch: {}
  workflow_run:
    workflows:
    - 01 Split & Schedule
    types:
    - completed
