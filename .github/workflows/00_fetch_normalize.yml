name: 00 Fetch & Normalize
true:
  workflow_dispatch: null
  workflow_run:
    workflows:
    - Second Update Lineups and Todays Games CSVs
    types:
    - completed
    branches:
    - main
permissions:
  contents: write
jobs:
  fetch_normalize:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York
    steps:
    - name: Checkout main
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
    - name: Configure Git
      run: 'git config user.name "github-actions"

        git config user.email "github-actions@github.com"

        '
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-py-
    - name: Setup Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install deps
      run: 'python -m pip install --upgrade pip

        pip install -r requirements.txt

        '
    - name: Run stage with unified logs
      shell: bash
      run: "set +e\nmkdir -p summaries/foundation\nSTATUS=\"summaries/foundation/status.txt\"\
        \nLOG=\"summaries/foundation/log.txt\"\nERR=\"summaries/foundation/errors.txt\"\
        \nSUM=\"summaries/foundation/summary.txt\"\n: >\"$STATUS\"; : >\"$LOG\"; :\
        \ >\"$ERR\"; : >\"$SUM\"\n\nts(){ TZ=\"America/New_York\" date +\"%Y-%m-%d\
        \ %I:%M:%S %p %Z\"; }\nrun_step(){\n  echo \"\u25B6\uFE0F START: $1 ($(ts))\"\
        \ >>\"$LOG\"\n  shift\n  \"$@\" >>\"$LOG\" 2>step.err\n  rc=$?\n  if [ $rc\
        \ -eq 0 ]; then\n    echo \"\u2705 $1 succeeded [$(ts)]\" >>\"$STATUS\"\n\
        \  else\n    echo \"\u274C $1 failed [$(ts)]\" >>\"$STATUS\"\n    {\n    \
        \  echo \"\u274C $1 ERROR [$(ts)]:\"\n      cat step.err\n      echo\n   \
        \   echo '---'\n      echo\n    } >>\"$ERR\"\n  fi\n  rm -f step.err\n  echo\
        \ \"\u23F9\uFE0F END: $1 ($(ts))\" >>\"$LOG\"\n  echo >>\"$LOG\"\n}\n\nrun_step\
        \ normalize_names.py                  python scripts/normalize_names.py\n\
        run_step tag_master_files.py                 python scripts/tag_master_files.py\n\
        run_step validate_tagged_players.py          python scripts/validate_tagged_players.py\n\
        run_step deduplicate_normalized.py           python scripts/deduplicate_normalized.py\n\
        run_step normalize_lineups.py                python scripts/normalize_lineups.py\n\
        run_step normalize_todays_games.py           python scripts/normalize_todays_games.py\n\
        run_step inject_pitcher_ids_into_games.py    python scripts/inject_pitcher_ids_into_games.py\n\
        run_step apply_team_name_mapping.py          python scripts/apply_team_name_mapping.py\n\
        run_step fetch_mlb_ids.py                    python scripts/fetch_mlb_ids.py\n\
        run_step hotfix_team_codes.py                python scripts/hotfix_team_codes.py\n\
        run_step update_game_time.py                 python scripts/update_game_time.py\n\
        run_step finalize_todaysgames_types_and_pf.py  python scripts/finalize_todaysgames_types_and_pf.py\n\
        run_step filter_stadium_metadata.py          python scripts/filter_stadium_metadata.py\n\
        run_step normalize_batter_team_names.py      python scripts/normalize_batter_team_names.py\n\
        \n# Build batters_today.csv from the normalized lineups (new)\nrun_step build_batters_today_from_lineups.py\
        \  python scripts/build_batters_today_from_lineups.py\n\n# Clean/dedupe after\
        \ build (existing behavior)\nrun_step post_normalize_fixups.py           \
        \ python scripts/post_normalize_fixups.py --games data/raw/todaysgames_normalized.csv\
        \ --batters data/cleaned/batters_today.csv --pitchers data/cleaned/pitchers_normalized_cleaned.csv\
        \ --game-date \"$(date -u +%Y%m%d)\"\nrun_step fix_inputs_inject_stolen_base_pct.py\
        \  python scripts/fix_inputs_inject_stolen_base_pct.py\n\n{\n  echo \"=====\
        \ RUN TIMESTAMP: $(ts) =====\"\n  echo\n  echo \"===== STATUS =====\";  cat\
        \ \"$STATUS\"\n  echo; echo \"===== LOG =====\";   cat \"$LOG\"\n  echo; echo\
        \ \"===== ERRORS =====\";cat \"$ERR\"\n} > \"$SUM\"\n"
    - name: Commit stage outputs
      run: '# stage expected data outputs (existence may vary run-to-run)

        git add data/raw/todaysgames_normalized.csv || true

        git add data/raw/lineups_normalized.csv || true

        git add data/cleaned/batters_today.csv || true

        git add data/cleaned/pitchers_normalized_cleaned.csv || true

        git add summaries/foundation/* || true

        git diff --cached --quiet || git commit -m "00 foundation outputs"

        git pull --rebase origin main || true

        git push origin HEAD:main || true

        '
'on':
  workflow_dispatch: {}
