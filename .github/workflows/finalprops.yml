name: Run Final Props 1

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-final-props-1:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else:
            python -m pip install "pandas==2.2.2"
          fi

      - name: Git config
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config --global pull.rebase true

      # ---- Sanity: show what the runner is actually using ----
      - name: Show running script version
        run: |
          echo "Branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Last commit:"
          git log -1 --oneline
          echo "Path to script:"
          ls -l scripts/final_props_1.py || true
          echo "First 120 lines of scripts/final_props_1.py:"
          sed -n '1,120p' scripts/final_props_1.py || true
          echo "Guard (should be NO MATCH):"
          ! grep -n 'sched\[\["team",\s*"date",\s*"game_id"\]\]' -n scripts/final_props_1.py || (echo "ERROR: old code detected"; exit 1)

      - name: Snapshot pre-run line count
        id: before
        run: |
          FILE="data/bets/player_props_history.csv"
          echo "count=$( [ -f "$FILE" ] && wc -l < "$FILE" || echo 0 )" >> $GITHUB_OUTPUT

      - name: Run final_props_1.py
        run: python scripts/final_props_1.py

      - name: Snapshot post-run line count
        id: after
        run: |
          FILE="data/bets/player_props_history.csv"
          echo "count=$( [ -f "$FILE" ] && wc -l < "$FILE" || echo 0 )" >> $GITHUB_OUTPUT

      - name: Show delta
        run: |
          echo "Before: ${{ steps.before.outputs.count }}"
          echo "After:  ${{ steps.after.outputs.count }}"
          echo "Delta:  $(( ${{ steps.after.outputs.count }} - ${{ steps.before.outputs.count }} ))"

      - name: Commit and push changes
        shell: bash
        run: |
          set -e
          git add data/bets/player_props_history.csv
          if [[ -z "$(git status --porcelain data/bets/player_props_history.csv)" ]]; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Automated: update player_props_history via final_props_1.py"
          BRANCH="${GITHUB_REF_NAME:-main}"
          git fetch origin
          git rebase "origin/$BRANCH" || (echo "Rebase failed"; git rebase --abort; exit 1)
          git push origin "HEAD:$BRANCH"
