name: Build Batter Projections & Final Props

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-finalize:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else
            python -m pip install "pandas==2.2.2" numpy
          fi

      - name: Git config
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git config --global pull.rebase false

      # ---------- Upstream: build batter projections ----------
      - name: Show inputs for projections
        run: |
          ls -l data/end_chain/final || true
          echo "Preview bat_today_final.csv (first 15 lines):"
          sed -n '1,15p' data/end_chain/final/bat_today_final.csv || true

      - name: Snapshot pre-run hashes
        id: prehash
        run: |
          set -e
          for f in \
            data/_projections/batter_props_projected.csv \
            data/bets/player_props_history.csv \
            data/bets/game_props_history.csv
          do
            if [ -f "$f" ]; then
              echo "$(sha256sum "$f")"
            else
              echo "MISSING $f"
            fi
          done > prehash.txt
          cat prehash.txt

      - name: Run project_batter_props.py (upstream probabilities)
        run: python scripts/project_batter_props.py

      - name: Validate probability spread (projected)
        run: |
          python - << 'PY'
          import pandas as pd, sys
          p = "data/_projections/batter_props_projected.csv"
          df = pd.read_csv(p)
          prob_cols = [c for c in ["prob_hits_over_1p5","prob_hr_over_0p5","prob_tb_over_1p5"] if c in df.columns]
          if not prob_cols:
            print("No upstream prob_* columns present (ok if script was not updated yet)."); sys.exit(0)
          s = pd.concat([df[c].dropna() for c in prob_cols], ignore_index=True)
          if s.empty or s.nunique() < 10:
            print("Upstream probabilities look too flat."); print(s.describe()); sys.exit(1)
          print("Upstream probability spread looks OK.")
          PY

      # ---------- Final: build history ----------
      - name: Run final_props_1.py
        run: |
          python -m py_compile scripts/final_props_1.py
          python scripts/final_props_1.py

      # ---------- NEW: Run final_scores_1.py ----------
      - name: Run final_scores_1.py
        run: |
          python -m py_compile scripts/final_scores_1.py
          python scripts/final_scores_1.py

      - name: Show deltas & tails
        run: |
          set -e
          echo "Post-run hashes:"
          for f in \
            data/_projections/batter_props_projected.csv \
            data/bets/player_props_history.csv \
            data/bets/game_props_history.csv
          do
            if [ -f "$f" ]; then
              echo "$(sha256sum "$f")"
            else
              echo "MISSING $f"
            fi
          done > posthash.txt
          cat posthash.txt
          echo
          echo "Diff hashes:"
          (diff -u prehash.txt posthash.txt || true)
          echo
          echo "Tail of batter_props_projected.csv:"; tail -n 5 data/_projections/batter_props_projected.csv || true
          echo
          echo "Tail of player_props_history.csv:";  tail -n 5 data/bets/player_props_history.csv || true
          echo
          echo "Tail of game_props_history.csv:";    tail -n 5 data/bets/game_props_history.csv || true

      - name: Commit and push changes
        shell: bash
        run: |
          set -e
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Automated: update projections, props history, and final scores"
          BRANCH="${GITHUB_REF_NAME:-main}"
          git push origin "HEAD:$BRANCH"

      - name: Upload artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: props-output
          path: |
            data/_projections/batter_props_projected.csv
            data/bets/player_props_history.csv
            data/bets/game_props_history.csv
