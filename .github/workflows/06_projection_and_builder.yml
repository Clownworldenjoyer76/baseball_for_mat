# .github/workflows/06_projection_and_builder.yml
name: 06 Projections & Builder

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: 06-projections-${{ github.ref }}
  cancel-in-progress: true

jobs:
  projections_builder:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York

    steps:
      - name: Banner
        run: |
          echo "06 START $(TZ=America/New_York date)"
          echo "event_name=${{ github.event_name }}"
          echo "ref_name=${{ github.ref_name }}"
          echo "triggered_by=${{ github.event.workflow_run.name || 'manual' }}"
          echo "conclusion=${{ github.event.workflow_run.conclusion || 'manual' }}"

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-py-

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run stage with unified logs
        shell: bash
        run: |
          set +e
          mkdir -p summaries/projections
          STATUS="summaries/projections/status.txt"
          LOG="summaries/projections/log.txt"
          ERR="summaries/projections/errors.txt"
          SUM="summaries/projections/summary.txt"
          : >"$STATUS"; : >"$LOG"; : >"$ERR"; : >"$SUM"

          ts(){ TZ="America/New_York" date +"%Y-%m-%d %I:%M:%S %p %Z"; }
          run_step(){
            local NAME="$1"; shift
            echo "▶️ START: ${NAME} ($(ts))" >>"$LOG"
            "$@" >>"$LOG" 2>step.err
            rc=$?
            if [ $rc -eq 0 ]; then
              echo "✅ ${NAME} succeeded [$(ts)]" >>"$STATUS"
            else
              echo "❌ ${NAME} failed [$(ts)]" >>"$STATUS"
              {
                echo "❌ ${NAME} ERROR [$(ts)]:"
                cat step.err
                echo
                echo '---'
                echo
              } >>"$ERR"
            fi
            rm -f step.err
            echo "⏹️ END: ${NAME} ($(ts))" >>"$LOG"
            echo >>"$LOG"
          }

          run_step project_prep.py                  python scripts/project_prep.py
          run_step fix_missing_batter_stats.py      python scripts/fix_missing_batter_stats.py
          run_step normalize_batters_for_builder.py python scripts/normalize_batters_for_builder.py
          run_step project_batter_props.py          python scripts/project_batter_props.py
          run_step project_pitcher_props.py         python scripts/project_pitcher_props.py
          run_step build_expanded_batter_props.py   python scripts/build_expanded_batter_props.py
          run_step pitcher_mega_z.py                python scripts/pitcher_mega_z.py

          {
            echo "===== RUN TIMESTAMP: $(ts) ====="
            echo
            echo "===== STATUS =====";  cat "$STATUS"
            echo; echo "===== LOG =====";   cat "$LOG"
            echo; echo "===== ERRORS =====";cat "$ERR"
          } > "$SUM"

          # mark failure
          if grep -q "❌" "$STATUS"; then
            exit 1
          fi

      - name: Force write & push 06 summary
        if: always()
        run: |
          mkdir -p summaries/06_projection
          cat summaries/projections/summary.txt > summaries/06_projection/summary.txt || echo "No summary generated" > summaries/06_projection/summary.txt
          git add summaries/06_projection/summary.txt || true
          git commit -m "06 summary (auto)" || true
          git pull --rebase origin main || true
          git push origin HEAD:main || true
