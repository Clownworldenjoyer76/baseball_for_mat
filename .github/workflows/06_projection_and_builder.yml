name: 06_projection_and_builder

on:
  workflow_dispatch:
  push:
    paths:
      - "scripts/**"
      - "data/**"
      - ".github/workflows/06_projection_and_builder.yml"
  schedule:
    - cron: "15 11 * * *"   # 11:15 UTC = 7:15 ET default; adjust if you want

env:
  PYTHONUNBUFFERED: "1"
  TZ: America/New_York

jobs:
  build-projections:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          set -euo pipefail
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
            pip install pandas numpy scipy pytz python-dateutil
          fi

      - name: Make scripts executable (if any shell helpers)
        run: |
          chmod +x scripts/* || true

      # =========================
      # 1) PRE-FIX / NORMALIZATION HELPERS
      # =========================
      - name: fix_outputs_generate_fixed_files.py
        run: |
          set -euo pipefail
          python scripts/fix_outputs_generate_fixed_files.py

      - name: apply_fixed_todaysgames
        run: |
          set -euo pipefail
          if [ -f scripts/apply_fixed_todaysgames ]; then
            bash scripts/apply_fixed_todaysgames
          elif [ -f scripts/apply_fixed_todaysgames.py ]; then
            python scripts/apply_fixed_todaysgames.py
          else
            echo "No apply_fixed_todaysgames script found; continuing."
          fi

      # =========================
      # 2) PROJECT PREP (UPDATED)
      # =========================
      - name: project_prep.py
        run: |
          set -euo pipefail
          python scripts/project_prep.py

      # =========================
      # 3) BATTER PIPE
      # =========================
      - name: fix_missing_batter_stats.py
        run: |
          set -euo pipefail
          python scripts/fix_missing_batter_stats.py

      - name: normalize_batters_for_builder.py
        run: |
          set -euo pipefail
          python scripts/normalize_batters_for_builder.py

      - name: project_batter_props.py
        run: |
          set -euo pipefail
          python scripts/project_batter_props.py

      - name: build_expanded_batter_props.py
        run: |
          set -euo pipefail
          python scripts/build_expanded_batter_props.py

      # =========================
      # 4) PITCHER PIPE
      # =========================
      - name: project_pitcher_props.py
        run: |
          set -euo pipefail
          python scripts/project_pitcher_props.py

      - name: pitcher_mega_z.py
        run: |
          set -euo pipefail
          python scripts/pitcher_mega_z.py

      - name: starter_coverage_guard.py (non-blocking)
        continue-on-error: true
        run: |
          set -euo pipefail
          python scripts/starter_coverage_guard.py || {
            echo "::warning::starter_coverage_guard reported missing starters. See summaries/projections/mega_z_starter_coverage.csv and mega_z_starter_missing.csv";
          }

      - name: post_normalize_pitchers.py
        run: |
          set -euo pipefail
          python scripts/post_normalize_pitchers.py

      # =========================
      # 5) FINALIZE + AUGMENT
      # =========================
      - name: finalize_projections.py
        run: |
          set -euo pipefail
          python scripts/finalize_projections.py

      - name: clean_inject_team_ids.py
        run: |
          set -euo pipefail
          python scripts/clean_inject_team_ids.py

      - name: inject_game_ids_from_schedule.py
        run: |
          set -euo pipefail
          python scripts/inject_game_ids_from_schedule.py

      - name: inject_batter_woba_adjustments.py
        run: |
          set -euo pipefail
          python scripts/inject_batter_woba_adjustments.py

      - name: clean_pitcher_files.py
        run: |
          set -euo pipefail
          python scripts/clean_pitcher_files.py

      - name: impute_missing_batter_adj_woba.py
        run: |
          set -euo pipefail
          python scripts/impute_missing_batter_adj_woba.py

      - name: fix_missing_pa_in_pitcher_daily.py
        run: |
          set -euo pipefail
          python scripts/fix_missing_pa_in_pitcher_daily.py

      # =========================
      # 6) OPTIONAL: GAME SCORE PROJECTIONS
      # =========================
      - name: project_game_scores.py (optional)
        continue-on-error: true
        run: |
          set -euo pipefail
          if [ -f scripts/project_game_scores.py ]; then
            python scripts/project_game_scores.py || {
              echo "::warning::project_game_scores.py encountered an error. Check summaries/07_final/*.csv for diagnostics."
            }
          else
            echo "project_game_scores.py not present; skipping."
          fi

      # =========================
      # 7) ARTIFACTS (helpful for mobile review)
      # =========================
      - name: Upload final CSV artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: final-csvs
          path: |
            data/end_chain/final/*.csv
            data/_projections/*final*.csv
            summaries/**/*.csv
          if-no-files-found: warn
