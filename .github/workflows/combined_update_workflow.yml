name: Update Lineups and Todays Games CSVs

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
          ref: main

      - name: Show repo/branch/remote
        run: |
          echo "Repo: ${{ github.repository }}"
          echo "Ref : ${{ github.ref }}"
          echo "Branch: ${{ github.ref_name }}"
          git rev-parse --abbrev-ref HEAD
          git remote -v
          pwd && ls -la

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas requests
          fi

      - name: Run with unified logs and commits → summaries/todaysgames
        shell: bash
        run: |
          set +e

          mkdir -p summaries/todaysgames data/raw
          STATUS_FILE="summaries/todaysgames/status.txt"
          LOG_FILE="summaries/todaysgames/log.txt"
          ERR_FILE="summaries/todaysgames/errors.txt"
          SUMMARY_FILE="summaries/todaysgames/summary.txt"
          : > "$STATUS_FILE"; : > "$LOG_FILE"; : > "$ERR_FILE"; : > "$SUMMARY_FILE"

          ts() { TZ="America/New_York" date +"%Y-%m-%d %I:%M:%S %p %Z"; }

          run_step() {
            local NAME="$1"; shift
            local CMD=("$@")
            echo "▶️ START: ${NAME} ($(ts))" | tee -a "$LOG_FILE"
            echo "::group::${NAME}"
            "${CMD[@]}" >> "$LOG_FILE" 2> step.err
            local RC=$?
            echo "::endgroup::"
            if [ $RC -eq 0 ]; then
              echo "✅ ${NAME} succeeded [$(ts)]" | tee -a "$STATUS_FILE"
            else
              echo "❌ ${NAME} failed [$(ts)]" | tee -a "$STATUS_FILE"
              {
                echo "❌ ${NAME} ERROR [$(ts)]:"
                cat step.err
                echo ""
                echo "---"
                echo ""
              } >> "$ERR_FILE"
            fi
            rm -f step.err
            echo "⏹️ END: ${NAME} ($(ts))" | tee -a "$LOG_FILE"
            echo "" >> "$LOG_FILE"
            return $RC
          }

          git_cfg() {
            git config user.name  "github-actions"
            git config
