name: "07_final_projections"

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["06 Projection and Builder"]  # must match 06's name exactly
    types: [completed]
    branches: [main]

permissions:
  contents: write

# optional: avoid overlapping runs
concurrency:
  group: 07-final-projections-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-final-projections:
    # allow manual runs OR only run after 06 succeeded
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York
      PYTHONUNBUFFERED: '1'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          mkdir -p summaries/07_final data/_projections data/end_chain/final

      - name: Reset summaries directory (fresh run)
        run: |
          set -euo pipefail
          mkdir -p summaries/07_final
          # remove ALL prior summary/diagnostic files so nothing carries over
          find summaries/07_final -type f -exec rm -f {} +
          # recreate empty per-step logs that we will tail later
          : > summaries/07_final/prep_daily_log.txt
          : > summaries/07_final/batter_log.txt
          : > summaries/07_final/pitcher_log.txt
          : > summaries/07_final/game_scores_log.txt
          : > summaries/07_final/summary.txt

      - name: Prep daily projection inputs
        run: |
          set -euo pipefail
          python scripts/prepare_daily_projection_inputs.py

      - name: Batter event probabilities
        run: |
          set -euo pipefail
          python scripts/project_batter_event_probabilities.py | tee -a summaries/07_final/batter_log.txt

      - name: Pitcher event probabilities
        run: |
          set -euo pipefail
          python scripts/project_pitcher_event_probabilities.py | tee -a summaries/07_final/pitcher_log.txt

      - name: Game score projections
        run: |
          set -euo pipefail
          # clear any stale bad-games diagnostic before recomputing
          rm -f summaries/07_final/gamescores_bad_games.txt || true
          python scripts/project_game_scores.py | tee -a summaries/07_final/game_scores_log.txt

      - name: Summarize run
        run: |
          set -euo pipefail
          {
            echo "===== RUN TIMESTAMP: $(date '+%Y-%m-%d %H:%M:%S %Z') ====="
            echo ""
            echo "===== LOG TAILS ====="

            for f in prep_daily_log.txt batter_log.txt pitcher_log.txt game_scores_log.txt; do
              echo "--- ${f%.*} (tail) ---"
              if [ -f "summaries/07_final/$f" ]; then
                tail -n 25 "summaries/07_final/$f"
              else
                echo "(missing)"
              fi
              echo ""
            done

            echo "===== ERROR GREP (from current logs) ====="
            if grep -RniE "error|fail|assert|Slate mismatch|Duplicate .*pairs" summaries/07_final | grep -v summary.txt; then
              echo "(errors found)"
              exit_code=1
            else
              echo "(no fatal errors found by grep)"
              exit_code=0
            fi

            # Only warn about bad games if the diagnostic was produced and is non-empty this run
            if [ -s "summaries/07_final/gamescores_bad_games.txt" ]; then
              echo "(warning: bad_games present; incomplete games were dropped)"
            fi

            exit $exit_code
          } > summaries/07_final/summary.txt

      - name: Commit CSVs + summaries
        if: always()
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add data/end_chain/final/game_score_projections.csv 2>/dev/null || true
          git add data/end_chain/final/batter_event_probabilities.csv 2>/dev/null || true
          git add data/end_chain/final/pitcher_event_probabilities.csv 2>/dev/null || true
          git add data/_projections/batter_event_probabilities.csv 2>/dev/null || true
          git add data/_projections/pitcher_event_probabilities.csv 2>/dev/null || true
          git add data/_projections/batter_props_projected_final.csv 2>/dev/null || true
          git add data/_projections/batter_props_expanded_final.csv 2>/dev/null || true
          git add summaries/07_final/* 2>/dev/null || true

          if ! git diff --cached --quiet; then
            git commit -m "CI: update final projections and summaries/07_final [$(date -u +'%Y-%m-%dT%H:%M:%SZ')]"
            git push
          else
            echo "No changes to commit."
          fi
