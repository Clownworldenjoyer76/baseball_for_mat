Name: 07_final_projections
true:
  workflow_dispatch: null
permissions:
  contents: write
jobs:
  run-final-projections:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York
      PYTHONUNBUFFERED: '1'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install deps
      run: "set -euo pipefail\npython -m pip install --upgrade pip\nif [ -f requirements.txt\
        \ ]; then\n  pip install -r requirements.txt\nfi\nmkdir -p summaries/07_final\
        \ data/_projections data/end_chain/final\n"
    - name: Reset summaries directory (fresh run)
      run: 'set -euo pipefail

        mkdir -p summaries/07_final

        # remove ALL prior summary/diagnostic files so nothing carries over

        find summaries/07_final -type f -exec rm -f {} +

        # recreate empty per-step logs that we will tail later

        : > summaries/07_final/prep_daily_log.txt

        : > summaries/07_final/batter_log.txt

        : > summaries/07_final/pitcher_log.txt

        : > summaries/07_final/game_scores_log.txt

        : > summaries/07_final/summary.txt

        '
    - name: Prep daily projection inputs
      run: 'set -euo pipefail

        python scripts/prepare_daily_projection_inputs.py

        '
    - name: Batter event probabilities
      run: 'set -euo pipefail

        python scripts/project_batter_event_probabilities.py | tee -a summaries/07_final/batter_log.txt

        '
    - name: Pitcher event probabilities
      run: 'set -euo pipefail

        python scripts/project_pitcher_event_probabilities.py | tee -a summaries/07_final/pitcher_log.txt

        '
    - name: Game score projections
      run: 'set -euo pipefail

        # clear any stale bad-games diagnostic before recomputing

        rm -f summaries/07_final/gamescores_bad_games.txt || true

        python scripts/project_game_scores.py | tee -a summaries/07_final/game_scores_log.txt

        '
    - name: Summarize run
      run: "set -euo pipefail\n{\n  echo \"===== RUN TIMESTAMP: $(date '+%Y-%m-%d\
        \ %H:%M:%S %Z') =====\"\n  echo \"\"\n  echo \"===== LOG TAILS =====\"\n\n\
        \  for f in prep_daily_log.txt batter_log.txt pitcher_log.txt game_scores_log.txt;\
        \ do\n    echo \"--- ${f%.*} (tail) ---\"\n    if [ -f \"summaries/07_final/$f\"\
        \ ]; then\n      tail -n 25 \"summaries/07_final/$f\"\n    else\n      echo\
        \ \"(missing)\"\n    fi\n    echo \"\"\n  done\n\n  echo \"===== ERROR GREP\
        \ (from current logs) =====\"\n  if grep -RniE \"error|fail|assert|Slate mismatch|Duplicate\
        \ .*pairs\" summaries/07_final | grep -v summary.txt; then\n    echo \"(errors\
        \ found)\"\n    exit_code=1\n  else\n    echo \"(no fatal errors found by\
        \ grep)\"\n    exit_code=0\n  fi\n\n  # Only warn about bad games if the diagnostic\
        \ was produced and is non-empty this run\n  if [ -s \"summaries/07_final/gamescores_bad_games.txt\"\
        \ ]; then\n    echo \"(warning: bad_games present; incomplete games were dropped)\"\
        \n  fi\n\n  exit $exit_code\n} > summaries/07_final/summary.txt\n"
    - name: Commit CSVs + summaries
      if: always()
      run: "set -euo pipefail\ngit config user.name  \"github-actions[bot]\"\ngit\
        \ config user.email \"github-actions[bot]@users.noreply.github.com\"\n\ngit\
        \ add data/end_chain/final/game_score_projections.csv 2>/dev/null || true\n\
        git add data/end_chain/final/batter_event_probabilities.csv 2>/dev/null ||\
        \ true\ngit add data/end_chain/final/pitcher_event_probabilities.csv 2>/dev/null\
        \ || true\ngit add data/_projections/batter_event_probabilities.csv 2>/dev/null\
        \ || true\ngit add data/_projections/pitcher_event_probabilities.csv 2>/dev/null\
        \ || true\ngit add data/_projections/batter_props_projected_final.csv 2>/dev/null\
        \ || true\ngit add data/_projections/batter_props_expanded_final.csv 2>/dev/null\
        \ || true\ngit add summaries/07_final/* 2>/dev/null || true\n\nif ! git diff\
        \ --cached --quiet; then\n  git commit -m \"CI: update final projections and\
        \ summaries/07_final [$(date -u +'%Y-%m-%dT%H:%M:%SZ')]\"\n  git push\nelse\n\
        \  echo \"No changes to commit.\"\nfi\n"
'on':
  workflow_dispatch: {}
  workflow_run:
    workflows:
    - 06 Projection and Builder
    types:
    - completed
