# .github/workflows/final_scores_1.p

name: Generate Game Projections

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs on pushes to the main branch
  push:
    branches:
      - main

  # Runs on a schedule (every day at 8:00 UTC / 4:00 AM EDT)
  schedule:
    - cron: '0 8 * * *'

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository code so the runner can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Specifies the Python version to use

      # Step 3: Install Python dependencies
      # It is best practice to have a requirements.txt file in your repo.
      # If you had one, you would use: pip install -r requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy

      # Step 4: Run the main Python script to generate the data file
      - name: Run final_scores_1.py
        run: python scripts/final_scores_1.py

      # Step 5: Commit the updated data file back to the repository
      - name: Commit and push if there are changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/bets/game_props_history.csv
          # The following lines check if there are any changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Automated data update: $(date -u +'%Y-%m-%d')"
            git push
          else
            echo "No changes to commit."
          fi

