diff --git a/.github/workflows/pipeline-prep.yml b/.github/workflows/pipeline-prep.yml
index 9d1236ff918eb1784ab1decf3f0eea20526461ce..90f9aeff4c2204289b6d31d2fafe6057c11d4b22 100644
--- a/.github/workflows/pipeline-prep.yml
+++ b/.github/workflows/pipeline-prep.yml
@@ -377,52 +377,68 @@ jobs:
         uses: actions/setup-python@v5
         with:
           python-version: "3.10"
 
       - name: Install deps
         run: |
           python -m pip install --upgrade pip
           pip install -r requirements.txt
 
       - name: Reset summaries
         run: |
           rm -rf summaries/batters_adjust
           mkdir -p summaries/batters_adjust
 
       - name: Run stage with unified logs
         run: |
           set +e
           STAGE="summaries/batters_adjust"
           STATUS="$STAGE/status.txt"
           LOG="$STAGE/log.txt"
           ERR="$STAGE/errors.txt"
           SUM="$STAGE/summary.txt"
           : >"$STATUS"; : >"$LOG"; : >"$ERR"; : >"$SUM"
 
           ts(){ TZ="America/New_York" date +"%Y-%m-%d %I:%M:%S %p %Z"; }
-          run_step(){ echo "▶️ START: $1 ($(ts))" >>"$LOG"; shift; "$@" >>"$LOG" 2>step.err; rc=$?; if [ $rc -eq 0 ]; then echo "✅ $1 succeeded [$(ts)]" >>"$STATUS"; else echo "❌ $1 failed [$(ts)]" >>"$STATUS"; { echo "❌ $1 ERROR [$(ts)]:";
-            cat step.err; echo; echo '---'; echo; } >>"$ERR"; fi; rm -f step.err; echo "⏹️ END: $1 ($(ts))" >>"$LOG"; echo >>"$LOG"; }
+          run_step(){
+            local step="$1"
+            shift
+            echo "▶️ START: ${step} ($(ts))" >>"$LOG"
+            "$@" >>"$LOG" 2>step.err
+            rc=$?
+            if [ $rc -eq 0 ]; then
+              echo "✅ ${step} succeeded [$(ts)]" >>"$STATUS"
+            else
+              echo "❌ ${step} failed [$(ts)]" >>"$STATUS"
+              { echo "❌ ${step} ERROR [$(ts)]:"
+                cat step.err
+                echo; echo '---'; echo; } >>"$ERR"
+            fi
+            rm -f step.err
+            echo "⏹️ END: ${step} ($(ts))" >>"$LOG"
+            echo >>"$LOG"
+          }
 
           run_step apply_weather_adjustment.py       python scripts/apply_weather_adjustment.py
           run_step apply_park_adjustment.py          python scripts/apply_park_adjustment.py
           run_step combine_batter_weather_park.py    python scripts/combine_batter_weather_park.py
 
           {
             echo "===== RUN TIMESTAMP: $(ts) ====="
             echo
             echo "===== STATUS =====";  cat "$STATUS"
             echo; echo "===== LOG =====";  cat "$LOG"
             echo; echo "===== ERRORS ====="; cat "$ERR"
           } > "$SUM"
 
       - name: Sweep stray root logs into summaries/batters_adjust
         run: |
           shopt -s nullglob
           mkdir -p summaries/batters_adjust
           for f in log_*.txt *.log; do
             [ -f "$f" ] && mv "$f" "summaries/batters_adjust/" || true
           done
 
       - name: Commit outputs
         run: |
           set -euo pipefail
           git add data/adjusted/batters_*_weather.csv || true
diff --git a/.github/workflows/pipeline-prep.yml b/.github/workflows/pipeline-prep.yml
index 9d1236ff918eb1784ab1decf3f0eea20526461ce..90f9aeff4c2204289b6d31d2fafe6057c11d4b22 100644
--- a/.github/workflows/pipeline-prep.yml
+++ b/.github/workflows/pipeline-prep.yml
@@ -552,51 +568,68 @@ jobs:
         uses: actions/setup-python@v5
         with:
           python-version: "3.10"
 
       - name: Install deps
         run: |
           python -m pip install --upgrade pip
           pip install -r requirements.txt
 
       - name: Reset summaries
         run: |
           rm -rf summaries/05_prep
           mkdir -p summaries/05_prep
 
       - name: Run stage with unified logs
         run: |
           set +e
           STAGE="summaries/05_prep"
           STATUS="$STAGE/status.txt"
           LOG="$STAGE/log.txt"
           ERR="$STAGE/errors.txt"
           SUM="$STAGE/summary.txt"
           : >"$STATUS"; : >"$LOG"; : >"$ERR"; : >"$SUM"
 
           ts(){ TZ="America/New_York" date +"%Y-%m-%d %I:%M:%S %p %Z"; }
-          run_step(){ echo "▶️ START: $1 ($(ts))" >>"$LOG"; shift; "$@" >>"$LOG" 2>step.err; rc=$?; if [ $rc -eq 0 ]; then echo "✅ $1 succeeded [$(ts)]" >>"$STATUS"; else echo "❌ $1 failed [$(ts)]" >>"$STATUS"; { echo "❌ $1 ERROR [$(ts)]:"; cat step.err; echo; echo '---'; echo; } >>"$ERR"; fi; rm -f step.err; echo "⏹️ END: $1 ($(ts))" >>"$LOG"; echo >>"$LOG"; }
+          run_step(){
+            local step="$1"
+            shift
+            echo "▶️ START: ${step} ($(ts))" >>"$LOG"
+            "$@" >>"$LOG" 2>step.err
+            rc=$?
+            if [ $rc -eq 0 ]; then
+              echo "✅ ${step} succeeded [$(ts)]" >>"$STATUS"
+            else
+              echo "❌ ${step} failed [$(ts)]" >>"$STATUS"
+              { echo "❌ ${step} ERROR [$(ts)]:"
+                cat step.err
+                echo; echo '---'; echo; } >>"$ERR"
+            fi
+            rm -f step.err
+            echo "⏹️ END: ${step} ($(ts))" >>"$LOG"
+            echo >>"$LOG"
+          }
 
           run_step prep_merge.py                   python scripts/prep_merge.py
           run_step chain_load_data.py              python scripts/chain_load_data.py
           run_step clean_and_preprocess_games.py   python scripts/clean_and_preprocess_games.py
           run_step normalize_pitchers_xtra.py      python scripts/normalize_pitchers_xtra.py
           run_step clean_merge_files.py            python scripts/clean_merge_files.py
           run_step finalbatawp.py                  python scripts/finalbatawp.py
           run_step finalbathwp.py                  python scripts/finalbathwp.py
           run_step pit1.py                         python scripts/pit1.py
 
           {
             echo "===== RUN TIMESTAMP: $(ts) ====="
             echo
             echo "===== STATUS =====";  cat "$STATUS"
             echo; echo "===== LOG =====";  cat "$LOG"
             echo; echo "===== ERRORS ====="; cat "$ERR"
           } > "$SUM"
 
       - name: Sweep stray root logs into summaries/05_prep
         run: |
           shopt -s nullglob
           mkdir -p summaries/05_prep
           for f in log_*.txt *.log; do
             [ -f "$f" ] && mv "$f" "summaries/05_prep/" || true
           done
