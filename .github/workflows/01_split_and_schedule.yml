name: 01 Split & Schedule
true:
  workflow_dispatch: null
  workflow_run:
    workflows:
    - 00 Fetch & Normalize
    types:
    - completed
    branches:
    - main
permissions:
  contents: write
jobs:
  split_sched:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
    - name: Configure Git
      run: 'git config user.name "github-actions"

        git config user.email "github-actions@github.com"

        '
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-py-
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install deps
      run: 'python -m pip install --upgrade pip

        pip install -r requirements.txt

        '
    - name: Run stage with unified logs
      shell: bash
      run: "set +e\nmkdir -p summaries/split_sched data/temp_inputs\nSTATUS=\"summaries/split_sched/status.txt\"\
        \nLOG=\"summaries/split_sched/log.txt\"\nERR=\"summaries/split_sched/errors.txt\"\
        \nSUM=\"summaries/split_sched/summary.txt\"\n: >\"$STATUS\"; : >\"$LOG\";\
        \ : >\"$ERR\"; : >\"$SUM\"\n\nts(){ TZ=\"America/New_York\" date +\"%Y-%m-%d\
        \ %I:%M:%S %p %Z\"; }\nrun_step(){ echo \"\u25B6\uFE0F START: $1 ($(ts))\"\
        \ >>\"$LOG\"; shift; \"$@\" >>\"$LOG\" 2>step.err; rc=$?; if [ $rc -eq 0 ];\
        \ then echo \"\u2705 $1 succeeded [$(ts)]\" >>\"$STATUS\"; else echo \"\u274C\
        \ $1 failed [$(ts)]\" >>\"$STATUS\"; { echo \"\u274C $1 ERROR [$(ts)]:\";\
        \ cat step.err; echo; echo '---'; echo; } >>\"$ERR\"; fi; rm -f step.err;\
        \ echo \"\u23F9\uFE0F END: $1 ($(ts))\" >>\"$LOG\"; echo >>\"$LOG\"; }\n\n\
        cp -f data/cleaned/batters_today.csv               data/temp_inputs/batters_today_copy.csv\
        \ || true\ncp -f data/raw/todaysgames_normalized.csv          data/temp_inputs/todaysgames_normalized_copy.csv\
        \ || true\ncp -f data/cleaned/pitchers_normalized_cleaned.csv data/temp_inputs/pitchers_normalized_cleaned_copy.csv\
        \ || true\n\nrun_step splitaway.py                 python scripts/splitaway.py\
        \ \"data/temp_inputs/batters_today_copy.csv\" \"data/temp_inputs/todaysgames_normalized_copy.csv\"\
        \ \"data/adjusted/batters_away.csv\"\nrun_step splithome.py              \
        \   python scripts/splithome.py \"data/temp_inputs/batters_today_copy.csv\"\
        \ \"data/temp_inputs/todaysgames_normalized_copy.csv\" \"data/adjusted/batters_home.csv\"\
        \nrun_step updatesplitcsvs.py           python scripts/updatesplitcsvs.py\n\
        run_step commit_split_batters.py      python scripts/commit_split_batters.py\n\
        run_step normalize_pitcher_home_away  python scripts/normalize_pitcher_home_away.py\
        \ \"data/temp_inputs/pitchers_normalized_cleaned_copy.csv\" \"data/temp_inputs/todaysgames_normalized_copy.csv\"\
        \ \"data/adjusted/pitchers_home.csv\" \"data/adjusted/pitchers_away.csv\"\n\
        run_step pitcherfilecleanup.py        python scripts/pitcherfilecleanup.py\n\
        run_step bet_prep_1.py                python scripts/bet_prep_1.py\n\n{\n\
        \  echo \"===== RUN TIMESTAMP: $(ts) =====\"\n  echo; echo \"===== STATUS\
        \ =====\";  cat \"$STATUS\"\n  echo; echo \"===== LOG =====\";     cat \"\
        $LOG\"\n  echo; echo \"===== ERRORS =====\";  cat \"$ERR\"\n} > \"$SUM\"\n"
    - name: Commit stage outputs
      run: 'git add --force data/adjusted/batters_*.csv || true

        git add --force data/adjusted/pitchers_*.csv || true

        git add data/bets/mlb_sched.csv || true

        git add summaries/split_sched/* || true

        git diff --cached --quiet || git commit -m "01 split & schedule outputs"

        git pull --rebase origin main || true

        git push origin HEAD:main || true

        '
'on':
  workflow_dispatch: {}
  workflow_run:
    workflows:
    - 00 Fetch & Normalize
    types:
    - completed
