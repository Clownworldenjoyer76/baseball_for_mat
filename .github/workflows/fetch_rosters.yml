# .github/workflows/fetch_rosters.yml

name: Start Chain - Fetch Rosters

on:
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scripts with unified debug + summary
        shell: bash
        run: |
          set +e

          mkdir -p summaries/fetchrosters
          STATUS_FILE="summaries/fetchrosters/status.txt"
          LOG_FILE="summaries/fetchrosters/log.txt"
          ERR_FILE="summaries/fetchrosters/errors.txt"
          SUMMARY_FILE="summaries/fetchrosters/summary.txt"
          : > "$STATUS_FILE"; : > "$LOG_FILE"; : > "$ERR_FILE"; : > "$SUMMARY_FILE"

          ts() { TZ="America/New_York" date +"%Y-%m-%d %I:%M:%S %p %Z"; }

          run_step() {
            local NAME="$1"
            shift
            local CMD=("$@")

            echo "▶️ START: ${NAME} ($(ts))" | tee -a "$LOG_FILE"
            echo "::group::${NAME}"

            "${CMD[@]}" >> "$LOG_FILE" 2> step.err
            local RC=$?

            echo "::endgroup::"

            if [ $RC -eq 0 ]; then
              echo "✅ ${NAME} succeeded [$(ts)]" | tee -a "$STATUS_FILE"
            else
              echo "❌ ${NAME} failed [$(ts)]" | tee -a "$STATUS_FILE"
              {
                echo "❌ ${NAME} ERROR [$(ts)]:"
                cat step.err
                echo ""
                echo "---"
                echo ""
              } >> "$ERR_FILE"
            fi
            rm -f step.err
            echo "⏹️ END: ${NAME} ($(ts))" | tee -a "$LOG_FILE"
            echo "" >> "$LOG_FILE"
          }

          run_step "fetch_rosters.py"                python scripts/fetch_rosters.py
          run_step "normalize_rosters_to_team_csvs"  python scripts/normalize_rosters_to_team_csvs.py

          echo "▶️ START: commit_rosters ($(ts))" | tee -a "$LOG_FILE"
          {
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add data/rosters/*.csv
            git add data/rosters/ready/*.csv
            git diff --quiet && git diff --staged --quiet || git commit -m "Update MLB rosters"
            git push --force || echo "Nothing to push"
          } >> "$LOG_FILE" 2>> "$ERR_FILE"
          echo "⏹️ END: commit_rosters ($(ts))" | tee -a "$LOG_FILE"
          echo "" >> "$LOG_FILE"

          run_step "team_csvs_prep.py"               python scripts/team_csvs_prep.py

          echo "▶️ START: commit_team_csvs ($(ts))" | tee -a "$LOG_FILE"
          {
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add data/team_csvs/*.csv
            git diff --quiet && git diff --staged --quiet || git commit -m "Update team CSVs"
            git push --force || echo "Nothing to push"
          } >> "$LOG_FILE" 2>> "$ERR_FILE"
          echo "⏹️ END: commit_team_csvs ($(ts))" | tee -a "$LOG_FILE"
          echo "" >> "$LOG_FILE"

          run_step "build_player_team_master.py"     python scripts/build_player_team_master.py

          echo "▶️ START: commit_player_team_master ($(ts))" | tee -a "$LOG_FILE"
          {
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add data/processed/player_team_master.csv
            git diff --quiet && git diff --staged --quiet || git commit -m "Update player_team_master"
            git push --force || echo "Nothing to push"
          } >> "$LOG_FILE" 2>> "$ERR_FILE"
          echo "⏹️ END: commit_player_team_master ($(ts))" | tee -a "$LOG_FILE"
          echo "" >> "$LOG_FILE"

          {
            echo "===== RUN TIMESTAMP: $(ts) ====="
            echo ""
            echo "===== STATUS ====="
            cat "$STATUS_FILE"
            echo ""
            echo "===== LOG ====="
            cat "$LOG_FILE"
            echo ""
            echo "===== ERRORS ====="
            cat "$ERR_FILE"
          } > "$SUMMARY_FILE"

      - name: Commit summaries
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add summaries/fetchrosters/*
          git diff --quiet && git diff --staged --quiet || git commit -m "Add Fetch Rosters summaries"
          git push --force || echo "Nothing to push"
