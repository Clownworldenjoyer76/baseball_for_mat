name: 04-A Prep

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["04 Pitcher Adjustments"]
    types: [completed]
    branches: [main]

permissions:
  contents: write

jobs:
  prep_block:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York

    steps:
      - name: Banner
        run: |
          echo "04-A START $(TZ=America/New_York date)"
          echo "event_name=${{ github.event_name }}"
          echo "ref_name=${{ github.ref_name }}"
          echo "triggered_by=${{ github.event.workflow_run.name || 'manual' }}"
          echo "conclusion=${{ github.event.workflow_run.conclusion || 'manual' }}"

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-py-

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run 04-A Prep with unified logs
        shell: bash
        run: |
          set +e
          mkdir -p summaries/04a_prep
          STATUS="summaries/04a_prep/status.txt"
          LOG="summaries/04a_prep/log.txt"
          ERR="summaries/04a_prep/errors.txt"
          SUM="summaries/04a_prep/summary.txt"
          : >"$STATUS"; : >"$LOG"; : >"$ERR"; : >"$SUM"

          ts(){ TZ="America/New_York" date +"%Y-%m-%d %I:%M:%S %p %Z"; }
          run_step(){
            echo "▶️ START: $1 ($(ts))" >>"$LOG"
            shift
            "$@" >>"$LOG" 2>step.err
            rc=$?
            if [ $rc -eq 0 ]; then
              echo "✅ $1 succeeded [$(ts)]" >>"$STATUS"
            else
              echo "❌ $1 failed [$(ts)]" >>"$STATUS"
              {
                echo "❌ $1 ERROR [$(ts)]:"
                cat step.err
                echo
                echo '---'
                echo
              } >>"$ERR"
            fi
            rm -f step.err
            echo "⏹️ END: $1 ($(ts))" >>"$LOG"
            echo >>"$LOG"
          }

          # === 04-A Prep sequence ===
          run_step prep_merge.py                           python scripts/prep_merge.py
          run_step chain_load_data.py                      python scripts/chain_load_data.py
          run_step clean_and_preprocess_games.py           python scripts/clean_and_preprocess_games.py
          # run_step attach_pitcher_ids.py                   python scripts/attach_pitcher_ids.py
          run_step normalize_pitchers_xtra.py              python scripts/normalize_pitchers_xtra.py
          run_step clean_merge_files.py                    python scripts/clean_merge_files.py
          # run_step clean_and_preprocess_batters.py         python scripts/clean_and_preprocess_batters.py
          # run_step enrich_batters_away.py                  python scripts/enrich_batters_away.py
          # run_step cleanup_enriched_batters_away.py        python scripts/cleanup_enriched_batters_away.py
          run_step finalbatawp.py                          python scripts/finalbatawp.py
          run_step finalbathwp.py                          python scripts/finalbathwp.py
          run_step bat_1.py                                python scripts/bat_1.py
          run_step bat_2.py                                python scripts/bat_2.py
          run_step bat_away3.py                            python scripts/bat_away3.py
          run_step bat_home3.py                            python scripts/bat_home3.py
          run_step bat4.py                                 python scripts/bat4.py
          run_step woba_calc.py                            python scripts/woba_calc.py
          run_step pit1.py                                 python scripts/pit1.py
          run_step pit2.py                                 python scripts/pit2.py
          run_step end_prep.py                             python scripts/end_prep.py
          run_step pit3.py                                 python scripts/pit3.py
          run_step normalize_batters_projection_columns.py python scripts/normalize_batters_projection_columns.py
          run_step bat5.py                                 python scripts/bat5.py

          {
            echo "===== RUN TIMESTAMP: $(ts) ====="
            echo
            echo "===== STATUS =====";  cat "$STATUS"
            echo; echo "===== LOG =====";   cat "$LOG"
            echo; echo "===== ERRORS =====";cat "$ERR"
          } > "$SUM"

      - name: Commit 04-A Prep outputs
        run: |
          git add data/**/* || true
          git add summaries/04a_prep/* || true
          git diff --cached --quiet || git commit -m "04-A Prep block outputs"
          git pull --rebase origin main || true
          git push origin HEAD:main || true
